% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rasterizer.R
\name{canvas}
\alias{canvas}
\title{Canvas}
\usage{
canvas(data = NULL, mapping = aes(), ..., plot_width = 600,
  plot_height = 600, x_range = NULL, y_range = NULL,
  background = "#FFFFFF", colour_map = c("lightblue", "darkblue"),
  colour_key = NULL, show_raster = TRUE)
}
\arguments{
\item{data}{Dataset to use for plot. If not provided, data must be supplied in each layer of the plot.}

\item{mapping}{Default list of aesthetic mappings to use for plot. The same with `ggplot2`\link[aes]{aes}.
See details.}

\item{...}{Other arguments can be passed to layer.}

\item{plot_width}{The width of image, must be positive integer. Higher value indicates higher resolution.}

\item{plot_height}{The height of image, must be positive integer. Higher value indicates higher resolution.}

\item{x_range}{The range of x; It can be used to clip the image. Also, to large dataset, provided `x_range`
can help to speed code}

\item{y_range}{The range of y; It can be used to clip the image. Also, to large dataset, provided `y_range`
can help to speed code}

\item{background}{Background colour of this image. All layers share one background colour.}

\item{colour_map}{Colour used to map in each pixel. The `colour_map` would be extended by linear interpolation
independently for RGB. The darkness of the colour depends on the aggregation matrix value.}

\item{colour_key}{Used for categorical variable. In general, `colour_key` would be called when "colour"
is set in `aes()`}

\item{show_raster}{Logical value. Whether show raster or not}

\item{reduction_func}{A reduction operator function is used when aggregating datapoints
into a given pixel. The supported reduction operators are `sum`, `any`, `mean`, `first` and `last`.
More is coming}

\item{layout}{The way to layout multiple images. It is useful when data is catergorical("colour" is set in `aes()`).
The default setting is "weighted", which means the final raster is the weighted combination of each category
aggregation matrix. Also, we can "cover" each raster by the order of unique categories.}
}
\description{
Set canvas for rasterizer
}
\details{
In `rasterizer`, only five arguments can be passed in `aes()`, "x", "y", "on", "colour" and "size".
variable "on" represents the reduction function works "on" which column.
}
\examples{
\dontrun{
   library(rasterizer)
   if(requireNamespace("grid") && requireNamespace("gridExtra")) {
     x <- rnorm(1e7)
     y <- rnorm(1e7)
     category <- sample(1:5, 1e7, replace = TRUE)
     data.frame(x = x, y = y, category = category) \%>\%
       canvas(mapping = aes(x = x, y = y, colour = category)) \%>\%
       aggregation_points(layout = "weighted") \%>\%
       rasterizer() -> ds1

     data.frame(x = x, y = y, category = category) \%>\%
       canvas(mapping = aes(x = x, y = y, colour = category)) \%>\%
       aggregation_points(layout = "cover") \%>\%
       rasterizer() -> ds2

     grid::grid.newpage()
     gridExtra::grid.arrange(
        grobs = list(grid::rasterGrob(ds1$image), grid::rasterGrob(ds2$image)),
        ncol = 2,
        top = "'weighted' layout versus 'cover' layout"
     )
   }
}
}
